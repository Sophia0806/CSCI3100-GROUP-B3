class user{
// variable
 int id [20]
 char *email
 char nickname[20]
 int token
 //function
 def signup()
 def login()
 def logout()
 def update()
 def reset_pw()
 def reset_nickname()
 def join_game()
 def host_game()
}

class  accountsystem{
 //variable
 list user_list
 string email_verify_code
 list password_list
 //function
 def request_database()
 def signup_email_verify()
 def check_login()
 def send_reset_pw_email()
}
class gamemode{
 //variable
 int team_amount //default = 2
 list players  //record the players' id in current game
 list teams //only has teams[1] and teams[2] to record number in each team
 int players_each_team
 int rule   // -- need discussion
 object map 
 //function
 def check_start()
 def check_join()
 def update_infor()
 def check_end()
 def initialize()
 def end()
 def check_collide()
}
class map{
 string background  //file name
 string bgm   //file name
}
class player{
 int team
 string character
 int condition //number to represent status
 int position_x
 int position_y
 int direction_x
 int direction_y
 int score
}
class character{
  char *image
  char *name
  int team  //team number
  int max_hp
  int hp
  obj weapon
  obj skill
  float speed
  int condition  // use things like #define REST = 1 to define condition
  float knockback_rate
}
class weapon{
 char *w_image
 char *action //effect
 float speed
 int ammo
}
class skill{
 string name
 int type  // #define 
 int direction_x
 int direction_y
 int position_x
 int position_y
 string content
 float cooldown
 float Max_cooldown
}
class object{
 int position_x
 int position_y
 int max_hp
 int hp
 int remaining_time  // whether the character would disappear
}
class projectile{
 char *p_image
 int team
 int damage
 int direction_x
 int direction_y
 int duration
 int speed
 int knockback
}
class area_effect{
 char *a_image
 int position_x
 int position_y
 float size
 float duration
 float time
 int damage
 int knockback
 char *effect
}
class chatbox{
 string message
}
class message{
 string type
 string content
 int owner  //use user id to distinguish
 string time // like '00:00/01/01/2022'
}
class bubble{
 int position_x
 int position_y
 int type // =0 then the bubble show on the map, =1 then the bubble show on the screen
 string content
 int duration
}
